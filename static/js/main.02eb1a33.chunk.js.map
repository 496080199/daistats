{"version":3,"sources":["dai.png","abi sync /^/.//.*/.json$","web3.jsx","Main.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","ethers","require","window","eth","providers","InfuraProvider","formatAmount","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","formatNoDecimals","formatPercent","Main","props","document","title","format","debt","flip","parseFloat","saiSupply","sysLocked","className","blockNumber","interval","ilks","Art","ethLocked","ethSupply","line","ethFee","jugEthDrip","batLocked","batSupply","batFee","jugBatDrip","daiSupply","savingsDai","savingsPie","potFee","potDrip","sysSurplus","surplusBuffer","sysDebt","debtSize","batKicks","ethKicks","cdps","gemPit","uniswapDai","href","MCD_DAI","target","rel","SAI","MCD_GOV","utils","jsonFetch","url","fetch","then","res","json","add","build","address","name","Contract","multi","MULTICALL","vat","MCD_VAT","pot","MCD_POT","jug","MCD_JUG","vow","MCD_VOW","cat","MCD_CAT","weth","ETH","bat","BAT","sai","dai","mkr","manager","CDP_MANAGER","ethFlip","MCD_FLIP_ETH_A","batFlip","MCD_FLIP_BAT_A","ethIlkBytes","formatBytes32String","batIlkBytes","saiIlkBytes","App","state","INTERVAL","POSITION_CUR","POSITION_NXT","all","a","async","p1","aggregate","interface","functions","Line","encode","hump","sump","totalSupply","balanceOf","UNISWAP_EXCHANGE","MCD_JOIN_SAI","GEM_PIT","MCD_JOIN_ETH_A","MCD_JOIN_BAT_A","Pie","chi","rho","cdpi","base","sin","Ash","Sin","dsr","kicks","p2","etherscanEthSupply","Promise","toString","ethIlk","decode","batIlk","saiIlk","getFee","saiFee","vow_dai","vow_sin","ash","calcFee","pieChi","mul","setState","formatUnits","formatEther","rate","spot","dust","toFixed","unixToDateTime","toNumber","sub","isLoaded","ilk","combo","duty","result","getOSMPrice","osm","position","getStorageAt","val","bigNumberify","substring","stamp","Date","toLocaleDateString","toLocaleTimeString","this","setInterval","src","daiLogo","alt","max","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02eb1a33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dai.b6b0e761.png\";","var map = {\n\t\"./Cat.json\": 22,\n\t\"./DSToken.json\": 23,\n\t\"./Dai.json\": 24,\n\t\"./DssCdpManager.json\": 25,\n\t\"./ERC20.json\": 26,\n\t\"./Flipper.json\": 27,\n\t\"./GemJoin.json\": 28,\n\t\"./GemPit.json\": 29,\n\t\"./Jug.json\": 30,\n\t\"./Multicall.json\": 31,\n\t\"./Pot.json\": 32,\n\t\"./Vat.json\": 33,\n\t\"./Vow.json\": 34,\n\t\"./WETH9.json\": 35\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 21;","const ethers = require('ethers')\nwindow.ethers = ethers\nconst eth = new ethers.providers.InfuraProvider('homestead','4525cb9262b24bbcaf6ac079efd887bf')\nexport default eth\n","import React from 'react'\nimport './Main.css';\n\nconst formatAmount = new Intl.NumberFormat('en-US', {\n  style: 'decimal',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 2\n})\n\nconst formatNoDecimals = new Intl.NumberFormat('en-US', {\n  style: 'decimal',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0\n})\n\nconst formatCurrency = new Intl.NumberFormat('en-US', {\n  style: 'decimal',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 4\n})\n\nconst formatPercent = new Intl.NumberFormat('en-US', {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2\n})\n\nconst Main = (props) => {\n  document.title = `Dai Stats - ${formatAmount.format(props.debt)}`\n  const flip = parseFloat(props.saiSupply) - parseFloat(props.debt)\n  const sysCollat = props.sysLocked / props.debt\n  return (\n    <div>\n      <div className=\"notification is-primary has-text-centered\">\n        Current block: {props.blockNumber}. This page updates automatically every {props.interval / 1000} seconds.\n      </div>\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.debt}>{formatAmount.format(props.debt)}</h3>\n                <h4 className=\"subtitle is-size-3\">Total Dai</h4>\n              </div>\n            </div>\n            <div className=\"column\">\n                {flip >= 0 &&\n                  <div className=\"box has-text-centered\">\n                    <h3 className=\"title\">{formatNoDecimals.format(flip)} more Dai</h3>\n                    <h4 className=\"subtitle is-size-3\">til the FLIPPENING!</h4>\n                  </div>\n                }\n                {flip < 0 &&\n                  <div className=\"box has-text-centered\">\n                    <h3 className=\"title\">Sai + {formatNoDecimals.format(flip * -1 )} = Dai</h3>\n                    <h4 className=\"subtitle is-size-3\"> Dai has FLIPPED Sai!</h4>\n                  </div>\n                }\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.ilks[0].Art}>{formatAmount.format(props.ilks[0].Art)}</h3>\n                <p className=\"subtitle is-size-4\">Dai from ETH ({formatAmount.format(props.ilks[0].Art / props.debt * 100)}%)</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.ilks[1].Art}>{formatAmount.format(props.ilks[1].Art)}</h3>\n                <p className=\"subtitle is-size-4\">Dai from BAT ({formatAmount.format(props.ilks[1].Art / props.debt * 100)}%)</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.ilks[2].Art}>{formatAmount.format(props.ilks[2].Art)}</h3>\n                <p className=\"subtitle is-size-4\">Dai from Migration Contract</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.ethLocked}>{formatNoDecimals.format(props.ethLocked)}</h3>\n                <p className=\"title subtitle is-size-4\">ETH Locked (in ETH)</p>\n                <p className=\"subtitle is-size-6\">ETH Supply Locked: {formatPercent.format(props.ethLocked / props.ethSupply)}</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.ilks[0].line}>{formatAmount.format(props.ilks[0].line)}</h3>\n                <p className=\"title subtitle is-size-4\">ETH Ceiling (in Dai)</p>\n                <p className=\"subtitle is-size-6\">Utilization: {formatAmount.format(props.ilks[0].Art / props.ilks[0].line * 100)}%</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.ethFee}>{props.ethFee}%</h3>\n                <p className=\"title subtitle is-size-4\">ETH Stability Fee</p>\n                <p className=\"subtitle is-size-6\">Last Drip: {props.jugEthDrip}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n              <h3 className=\"title\" title={props.batLocked}>{formatNoDecimals.format(props.batLocked)}</h3>\n                <p className=\"title subtitle is-size-4\">BAT Locked (in BAT)</p>\n                <p className=\"subtitle is-size-6\">BAT Supply Locked: {formatPercent.format(props.batLocked / props.batSupply)}</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.ilks[1].line}>{formatAmount.format(props.ilks[1].line)}</h3>\n                <p className=\"title subtitle is-size-4\">BAT Ceiling (in Dai)</p>\n                <p className=\"subtitle is-size-6\">Utilization: {formatAmount.format(props.ilks[1].Art / props.ilks[1].line * 100)}%</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.batFee}>{props.batFee}%</h3>\n                <p className=\"title subtitle is-size-4\">BAT Stability Fee</p>\n                <p className=\"subtitle is-size-6\">Last Drip: {props.jugBatDrip}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.daiSupply}>{formatAmount.format(props.daiSupply)}</h3>\n                <p className=\"subtitle is-size-4\">Dai (ERC20) Supply</p>\n                <p className=\"subtitle is-size-6\"> </p>\n              </div>\n            </div>\n            {/* <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.ethPrice}>${formatAmount.format(props.ethPrice)}</h3>\n                <p className=\"title subtitle is-size-4\">ETH Price</p>\n                <p className=\"subtitle is-size-6\">Next OSM Price: ${formatAmount.format(props.ethPriceNxt)}</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.batPrice}>${formatCurrency.format(props.batPrice)}</h3>\n                <p className=\"title subtitle is-size-4\">BAT Price</p>\n                <p className=\"subtitle is-size-6\">Next OSM Price: ${formatCurrency.format(props.batPriceNxt)}</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\">{formatPercent.format(sysCollat)}</h3>\n                <p className=\"title subtitle is-size-4\">Collat. Ratio</p>\n                <p className=\"subtitle is-size-6\">Total Locked: ${formatAmount.format(props.sysLocked)}</p>\n              </div>\n            </div> */}\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.savingsDai}>{formatAmount.format(props.savingsDai)}</h3>\n                <p className=\"title subtitle is-size-4\">Dai in DSR ({formatAmount.format(props.savingsDai/ props.debt * 100)}%)</p>\n                <p className=\"subtitle is-size-6\">(Pie in DSR: {formatAmount.format(props.savingsPie)})</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.potFee}>{props.potFee}%</h3>\n                <p className=\"title subtitle is-size-4\">Dai Savings Rate</p>\n                <p className=\"subtitle is-size-6\">Last Drip: {props.potDrip}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.sysSurplus}>{formatAmount.format(props.sysSurplus)}</h3>\n                <p className=\"title subtitle is-size-4\">System Surplus (Dai)</p>\n                <p className=\"subtitle is-size-6\">Surplus Buffer: {formatAmount.format(props.surplusBuffer)}</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.sysDebt}>{formatAmount.format(props.sysDebt)}</h3>\n                <p className=\"title subtitle is-size-4\">System Debt (Dai)</p>\n                <p className=\"subtitle is-size-6\">Debt Buffer: {formatAmount.format(props.debtSize)}</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.batKicks}>{formatAmount.format(props.batKicks)}</h3>\n                <p className=\"subtitle is-size-4\">BAT Vault Auctions</p>\n                <p className=\"subtitle is-size-6\"> </p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.ethKicks}>{formatAmount.format(props.ethKicks)}</h3>\n                <p className=\"subtitle is-size-4\">ETH Vault Auctions</p>\n                <p className=\"subtitle is-size-6\"> </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.cdps}>{props.cdps}</h3>\n                <p className=\"subtitle is-size-4\">Vaults Opened</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.gemPit}>{formatAmount.format(props.gemPit)}</h3>\n                <p className=\"subtitle is-size-4\">MKR in Burner</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\" title={props.uniswapDai}>{formatAmount.format(props.uniswapDai)}</h3>\n                <p className=\"subtitle is-size-4\">Dai in Uniswap</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <a href={`https://etherscan.io/token/${props.MCD_DAI}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <h3 className=\"title\"><i className=\"fal fa-file-code\"></i> Dai</h3>\n                  <p className=\"subtitle is-size-7\">{props.MCD_DAI}</p>\n                </a>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <a href={`https://etherscan.io/token/${props.SAI}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <h3 className=\"title\"><i className=\"fal fa-file-code\"></i> Sai</h3>\n                  <p className=\"subtitle is-size-7\">{props.SAI}</p>\n                </a>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <a href={`https://etherscan.io/token/${props.MCD_GOV}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <h3 className=\"title\"><i className=\"fal fa-file-code\"></i> MKR</h3>\n                  <p className=\"subtitle is-size-7\">{props.MCD_GOV}</p>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default Main\n","import React, { Component } from 'react'\nimport eth from './web3';\nimport Main from './Main'\nimport daiLogo from './dai.png'\nconst ethers = require('ethers')\nconst utils = ethers.utils\n\nconst jsonFetch = url => fetch(url).then(res => res.json())\n\nconst add = require('./addresses.json')\nadd[\"GEM_PIT\"] = \"0x69076e44a9C70a67D5b79d95795Aba299083c275\"\nadd[\"UNISWAP_EXCHANGE\"] = \"0x2a1530c4c41db0b0b2bb646cb5eb1a67b7158667\"\nadd[\"MULTICALL\"] = \"0xeefBa1e63905eF1D7ACbA5a8513c70307C1cE441\"\n\nconst build = (address, name) => new ethers.Contract(address, require(`./abi/${name}.json`), eth)\n\nconst multi = build(add.MULTICALL, \"Multicall\")\nconst vat = build(add.MCD_VAT, \"Vat\")\nconst pot = build(add.MCD_POT, \"Pot\")\nconst jug = build(add.MCD_JUG, \"Jug\")\nconst vow = build(add.MCD_VOW, \"Vow\")\nconst cat = build(add.MCD_CAT, \"Cat\")\nconst weth = build(add.ETH, \"ERC20\")\nconst bat = build(add.BAT, \"ERC20\")\nconst sai = build(add.SAI, \"ERC20\")\nconst dai = build(add.MCD_DAI, \"Dai\")\nconst mkr = build(add.MCD_GOV, \"ERC20\")\nconst manager = build(add.CDP_MANAGER, \"DssCdpManager\")\nconst ethFlip = build(add.MCD_FLIP_ETH_A, \"Flipper\");\nconst batFlip = build(add.MCD_FLIP_BAT_A, \"Flipper\");\nconst ethIlkBytes = utils.formatBytes32String(\"ETH-A\");\nconst batIlkBytes = utils.formatBytes32String(\"BAT-A\")\nconst saiIlkBytes = utils.formatBytes32String(\"SAI\")\nwindow.utils = utils\nwindow.add = add\nwindow.vat = vat\nwindow.vow = vow\nwindow.cat = cat\nwindow.multi = multi\n\nclass App extends Component {\n  state = {\n    blockNumber: null\n  }\n\n  INTERVAL = 15 * 1000\n  POSITION_CUR = 3\n  POSITION_NXT = 4\n\n  componentDidMount() {\n    this.all()\n    setInterval(this.all, this.INTERVAL)\n  }\n\n  all = async () => {\n    let p1 = multi.aggregate([\n      [add.MCD_VAT, vat.interface.functions.Line.encode([])],\n      [add.MCD_VAT, vat.interface.functions.debt.encode([])],\n      [add.MCD_VAT, vat.interface.functions.ilks.encode([ethIlkBytes])],\n      [add.MCD_VAT, vat.interface.functions.ilks.encode([batIlkBytes])],\n      [add.MCD_VAT, vat.interface.functions.ilks.encode([saiIlkBytes])],\n      [add.MCD_VOW, vow.interface.functions.hump.encode([])],\n      [add.MCD_VOW, vow.interface.functions.sump.encode([])],\n      [add.MCD_DAI, dai.interface.functions.totalSupply.encode([])],\n      [add.MCD_DAI, dai.interface.functions.balanceOf.encode([add.UNISWAP_EXCHANGE])],\n      [add.SAI, sai.interface.functions.totalSupply.encode([])],\n      [add.SAI, sai.interface.functions.balanceOf.encode([add.MCD_JOIN_SAI])],\n      [add.MCD_GOV, mkr.interface.functions.balanceOf.encode([add.GEM_PIT])],\n      [add.ETH, weth.interface.functions.balanceOf.encode([add.MCD_JOIN_ETH_A])],\n      [add.BAT, bat.interface.functions.totalSupply.encode([])],\n      [add.BAT, bat.interface.functions.balanceOf.encode([add.MCD_JOIN_BAT_A])],\n      [add.MCD_POT, pot.interface.functions.Pie.encode([])],\n      [add.MCD_POT, pot.interface.functions.chi.encode([])],\n      [add.MCD_POT, pot.interface.functions.rho.encode([])],\n      [add.CDP_MANAGER, manager.interface.functions.cdpi.encode([])],\n      [add.MCD_JUG, jug.interface.functions.base.encode([])],\n      [add.MCD_JUG, jug.interface.functions.ilks.encode([ethIlkBytes])],\n      [add.MCD_JUG, jug.interface.functions.ilks.encode([batIlkBytes])],\n      [add.MCD_JUG, jug.interface.functions.ilks.encode([saiIlkBytes])],\n      [add.MCD_VAT, vat.interface.functions.dai.encode([add.MCD_VOW])],\n      [add.MCD_VAT, vat.interface.functions.sin.encode([add.MCD_VOW])],\n      [add.MCD_VOW, vow.interface.functions.Ash.encode([])],\n      [add.MCD_VOW, vow.interface.functions.Sin.encode([])],\n      [add.MCD_POT, pot.interface.functions.dsr.encode([])],\n      [add.MCD_FLIP_ETH_A, ethFlip.interface.functions.kicks.encode([])],\n      [add.MCD_FLIP_BAT_A, batFlip.interface.functions.kicks.encode([])],\n    ])\n    let p2 = this.etherscanEthSupply()\n    let [res, ethSupply] = await Promise.all([p1, p2])\n    const blockNumber = res[0].toString()\n    res = res[1]\n    const ethIlk = vat.interface.functions.ilks.decode(res[2])\n    const batIlk = vat.interface.functions.ilks.decode(res[3])\n    const saiIlk = vat.interface.functions.ilks.decode(res[4])\n    const daiSupply = dai.interface.functions.totalSupply.decode(res[7])\n    const saiSupply = sai.interface.functions.totalSupply.decode(res[9])\n    const ethLocked = weth.interface.functions.balanceOf.decode(res[12])\n    const batSupply = bat.interface.functions.totalSupply.decode(res[13])\n    const batLocked = bat.interface.functions.balanceOf.decode(res[14])\n    const gemPit = mkr.interface.functions.balanceOf.decode(res[11])\n    const uniswapDai = dai.interface.functions.balanceOf.decode(res[8])\n    const base = jug.interface.functions.base.decode(res[19])\n    const ethFee = this.getFee(base, jug.interface.functions.ilks.decode(res[20]))\n    const batFee = this.getFee(base, jug.interface.functions.ilks.decode(res[21]))\n    const saiFee = this.getFee(base, jug.interface.functions.ilks.decode(res[22]))\n    const jugEthDrip = jug.interface.functions.ilks.decode(res[20])\n    const jugBatDrip = jug.interface.functions.ilks.decode(res[21])\n    const vow_dai = vat.interface.functions.dai.decode(res[23])\n    const vow_sin = vat.interface.functions.dai.decode(res[24])\n    const ash = vow.interface.functions.Ash.decode(res[25])\n    const sin = vow.interface.functions.Sin.decode(res[26])\n    const surplusBuffer = vow.interface.functions.hump.decode(res[5])\n    const debtSize = vow.interface.functions.sump.decode(res[6])\n    const potFee = this.calcFee(pot.interface.functions.dsr.decode(res[27])[0])\n    const savingsPie = pot.interface.functions.Pie.decode(res[15])[0]\n    const pieChi = pot.interface.functions.chi.decode(res[16])[0]\n    const savingsDai = savingsPie.mul(pieChi);\n    const potDrip = pot.interface.functions.rho.decode(res[17])[0]\n    const ethKicks = ethFlip.interface.functions.kicks.decode(res[28])[0]\n    const batKicks = batFlip.interface.functions.kicks.decode(res[29])[0]\n    const cdps = manager.interface.functions.cdpi.decode(res[18])\n    this.setState({\n      blockNumber,\n      Line: utils.formatUnits(res[0], 45),\n      debt: utils.formatUnits(res[1], 45),\n      ilks: [\n        {\n          Art: utils.formatEther( ethIlk.Art),\n          rate: utils.formatUnits(ethIlk.rate, 27),\n          spot: utils.formatUnits(ethIlk.spot, 27),\n          line: utils.formatUnits(ethIlk.line, 45),\n          dust: utils.formatUnits(ethIlk.dust, 45)\n        },\n        {\n          Art: utils.formatEther( batIlk.Art),\n          rate: utils.formatUnits(batIlk.rate, 27),\n          spot: utils.formatUnits(batIlk.spot, 27),\n          line: utils.formatUnits(batIlk.line, 45),\n          dust: utils.formatUnits(batIlk.dust, 45)\n        },\n        {\n          Art: utils.formatEther( saiIlk.Art),\n          rate: utils.formatUnits(saiIlk.rate, 27),\n          spot: utils.formatUnits(saiIlk.spot, 27),\n          line: utils.formatUnits(saiIlk.line, 45),\n          dust: utils.formatUnits(saiIlk.dust, 45)\n        },\n      ],\n      daiSupply: utils.formatEther(daiSupply[0]),\n      saiSupply: utils.formatEther(saiSupply[0]),\n      ethSupply: utils.formatEther(ethSupply),\n      ethLocked: utils.formatEther(ethLocked[0]),\n      batSupply: utils.formatEther(batSupply[0]),\n      batLocked: utils.formatEther(batLocked[0]),\n      gemPit: utils.formatEther(gemPit[0]),\n      uniswapDai: utils.formatEther(uniswapDai[0]),\n      ethFee: ethFee.toFixed(2),\n      batFee: batFee.toFixed(2),\n      saiFee: saiFee.toFixed(2),\n      jugEthDrip: this.unixToDateTime(jugEthDrip.rho.toNumber()),\n      jugBatDrip: this.unixToDateTime(jugBatDrip.rho.toNumber()),\n      sysSurplus: utils.formatUnits(vow_dai[0].sub(vow_sin[0]), 45),\n      sysDebt: utils.formatUnits(vow_sin[0].sub(sin[0]).sub(ash[0]), 45),\n      surplusBuffer: utils.formatUnits(surplusBuffer[0], 45),\n      debtSize: utils.formatUnits(debtSize[0], 45),\n      potFee: potFee.toFixed(2),\n      savingsPie: utils.formatEther(savingsPie),\n      savingsDai: utils.formatUnits(savingsDai, 45),\n      potDrip: this.unixToDateTime(potDrip.toNumber()),\n      ethKicks: ethKicks.toNumber(),\n      batKicks: batKicks.toNumber(),\n      cdps: cdps.toString(),\n    })\n  }\n\n  isLoaded = () => {\n    return this.state.blockNumber !== null\n  }\n  calcFee = rate => parseFloat(utils.formatUnits(rate, 27)) ** (60*60*24*365) * 100 - 100;\n\n  getFee = (base, ilk) => {\n    const {duty} = ilk;\n    const combo = duty.add(base);\n    return this.calcFee(combo);\n  }\n\n  etherscanEthSupply = async () => {\n    const json = await jsonFetch('https://api.etherscan.io/api?action=ethsupply&module=stats&apikey=zomg');\n    return json.result;\n  }\n\n  getOSMPrice = async (osm, position) => {\n      const val = await eth.getStorageAt(osm, position);\n      return utils.bigNumberify('0x' + val.substring(34));\n  }\n\n  unixToDateTime = stamp => new Date(stamp * 1000).toLocaleDateString(\"en-US\") + \" \" + new Date(stamp * 1000).toLocaleTimeString(\"en-US\")\n\n  // init = async () => {\n  //   const ethPrice = await this.getOSMPrice(add.PIP_ETH, this.POSITION_CUR)\n  //   const ethPriceNxt = await this.getOSMPrice(add.PIP_ETH, this.POSITION_NXT)\n  //   const batPrice = await this.getOSMPrice(add.PIP_BAT, this.POSITION_CUR)\n  //   const batPriceNxt = await this.getOSMPrice(add.PIP_BAT, this.POSITION_NXT)\n  //   const saiLocked = await sai.balanceOf(add.MCD_JOIN_SAI)\n  //   const gemPit = await mkr.balanceOf(add.GEM_PIT)\n  //   const uniswapDai = await dai.balanceOf(add.UNISWAP_EXCHANGE)\n  //   const savingsPie = await pot.Pie()\n  //   const pieChi = await pot.chi();\n  //   const savingsDai = savingsPie.mul(pieChi);\n  //   const potDrip = await pot.rho();\n  //   const jugEthDrip = await jug.ilks(ethIlkBytes);\n  //   const jugBatDrip = await jug.ilks(batIlkBytes);\n  //   const cdps = await manager.cdpi();\n\n  //   const sysSurplus = await this.getSurplus();\n  //   const sysDebt = await this.getDebt();\n  //   const surplusBuffer = await vow.hump();\n  //   const debtSize = await vow.sump();\n  //   const sysLocked = await ethPrice.mul(ethLocked).add(batPrice.mul(batLocked)).add(saiLocked);\n\n  //   const ethKicks = await ethFlip.kicks();\n  //   const batKicks = await batFlip.kicks();\n  //   const potFee = await this.getPotFee();\n  //   const ethFee = await this.getFee(ethIlkBytes);\n  //   const batFee = await this.getFee(batIlkBytes);\n  //   const saiFee = await this.getFee(saiIlkBytes);\n  //   this.setState({\n  //     daiSupply: utils.formatEther(daiSupply),\n  //     saiSupply: utils.formatEther(saiSupply),\n  //     ethSupply: utils.formatEther(ethSupply),\n  //     ethLocked: utils.formatEther(ethLocked),\n  //     ethPrice: utils.formatEther(ethPrice),\n  //     ethPriceNxt: utils.formatEther(ethPriceNxt),\n  //     batSupply: utils.formatEther(batSupply),\n  //     batLocked: utils.formatEther(batLocked),\n  //     batPrice: utils.formatEther(batPrice),\n  //     batPriceNxt: utils.formatEther(batPriceNxt),\n  //     saiLocked: utils.formatEther(saiLocked),\n  //     sysLocked: utils.formatUnits(sysLocked, 36),\n  //     gemPit: utils.formatEther(gemPit),\n  //     Line: utils.formatUnits(Line, 45),\n  //     debt: utils.formatUnits(debt, 45),\n  //     cdps: cdps.toString(),\n  //     savingsPie: utils.formatEther(savingsPie),\n  //     savingsDai: utils.formatUnits(savingsDai, 45),\n  //     uniswapDai: utils.formatEther(uniswapDai),\n  //     potDrip: this.unixToDateTime(potDrip.toNumber()),\n  //     jugEthDrip: this.unixToDateTime(jugEthDrip.rho.toNumber()),\n  //     jugBatDrip: this.unixToDateTime(jugBatDrip.rho.toNumber()),\n  //     sysSurplus: utils.formatUnits(sysSurplus, 45),\n  //     sysDebt: utils.formatUnits(sysDebt, 45),\n  //     surplusBuffer: utils.formatUnits(surplusBuffer, 45),\n  //     debtSize: utils.formatUnits(debtSize, 45),\n  //     batKicks: batKicks.toNumber(),\n  //     ethKicks: ethKicks.toNumber(),\n  //     ethFee: ethFee.toFixed(2),\n  //     batFee: batFee.toFixed(2),\n  //     saiFee: saiFee.toFixed(2),\n  //     potFee: potFee.toFixed(2),\n  //   })\n  // }\n\n  render() {\n    if (this.isLoaded()) {\n      return (\n        <div>\n          <Main {...this.state} {...add} interval={this.INTERVAL} />\n        </div>\n      )\n    }\n    else\n    return (\n      <section className=\"section\">\n        <div className=\"container has-text-centered\">\n          <figure className=\"image is-128x128 container\">\n            <img src={daiLogo} alt=\"Dai Logo\" />\n          </figure>\n          <br />\n          <progress className=\"progress is-small is-primary\" max=\"100\">15%</progress>\n          <p>One sec, fetching data from Ethereum Mainnet</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}