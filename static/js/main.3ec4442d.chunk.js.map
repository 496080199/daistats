{"version":3,"sources":["dai.svg","web3.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","eth","Eth","console","log","utils","web3utils","etherscanSupply","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","json","wrap","_context","prev","next","fetch","then","res","sent","abrupt","fromWei","result","stop","this","apply","arguments","addresses","mkr","pit","dai","pip","pep","tub","peth","weth","window","tokenAbi","require","valueAbi","tubAbi","Contract","ethUsd","mkrUsd","formatCurr","Intl","NumberFormat","style","currency","minimumFractionDigits","formatAmount","App","state","daiSupply","ethSupply","wethSupply","lockedPeth","lockedWeth","gemPit","eventEth","eventMkr","init","_this","doDaiSupply","doEthSupply","doWethSupply","doPethSupply","doEthUsd","doMkrUsd","doLockedPeth","doLockedWeth","doGemPit","_callee2","_context2","methods","balanceOf","call","setState","_callee3","_context3","pie","_callee4","_context4","air","_callee5","_context5","totalSupply","_callee6","_context6","_callee7","pethSupply","_context7","_callee8","_context8","_callee9","value","_context9","read","_callee10","_context10","_this2","ethereum","setProvider","web3","currentProvider","providers","WebsocketProvider","events","Transfer","filter","dst","err","event","returnValues","wad","Date","now","unsubscribe","_this$state","react_default","createElement","className","src","daiLogo","alt","width","format","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ec4442d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dai.cfb65a48.svg\";","import Eth from 'web3-eth'\nimport web3utils from 'web3-utils'\n\nconst eth = new Eth()\nconsole.log(eth)\nexport default eth\n\nexport const utils = web3utils\n\nexport const initWeb3 = eth => {\n  if (window.ethereum) {\n    eth.setProvider(window.ethereum)\n    console.log('modern ethereum browser')\n  }\n  else if (window.web3) {\n    eth.setProvider(window.web3.currentProvider)\n    console.log('legacy ethereum browser')\n  }\n  else {\n    console.log('Non-Ethereum browser detected.')\n    eth.setProvider(new Eth.providers.WebsocketProvider(\"wss://mainnet.infura.io/ws\"))\n  }\n}\n","import React, { Component } from 'react';\nimport eth, { initWeb3, utils } from './web3';\nimport daiLogo from './dai.svg'\nimport './App.css';\n\nconst jsonFetch = url => fetch(url).then(res => res.json())\nconst etherscanSupply = async () => {\n  const json = await jsonFetch('https://api.etherscan.io/api?action=ethsupply&module=stats&apikey=zomg')\n  return utils.fromWei(json.result)\n}\n\nconst addresses = {\n  mkr: '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2',\n  pit: '0x69076e44a9C70a67D5b79d95795Aba299083c275',\n  dai: '0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359',\n  pip: '0x729D19f657BD0614b4985Cf1D82531c67569197B',\n  pep: '0x99041F808D598B782D5a3e498681C2452A31da08',\n  tub: '0x448a5065aeBB8E423F0896E6c5D525C040f59af3',\n  peth: '0xf53AD2c6851052A81B42133467480961B2321C09',\n  weth: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2'\n}\nwindow.addresses = addresses\n\nconst tokenAbi = require('./abi/token.json')\nconst valueAbi = require('./abi/value.json')\nconst tubAbi = require('./abi/tub.json')\nconst dai = new eth.Contract(tokenAbi, addresses.dai)\nconst peth = new eth.Contract(tokenAbi, addresses.peth)\nconst mkr = new eth.Contract(tokenAbi, addresses.mkr)\nconst weth = new eth.Contract(tokenAbi, addresses.weth)\nconst ethUsd = new eth.Contract(valueAbi, addresses.pip)\nconst mkrUsd = new eth.Contract(valueAbi, addresses.pep)\nconst tub = new eth.Contract(tubAbi, addresses.tub)\nwindow.dai = dai\nwindow.weth = weth\nwindow.tub = tub\nwindow.mkr = mkr\n\nconst formatCurr = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2\n})\n\nconst formatAmount = new Intl.NumberFormat('en-US', {\n  style: 'decimal',\n  minimumFractionDigits: 2\n})\n\nclass App extends Component {\n  state = {\n    daiSupply: null,\n    ethSupply: null,\n    wethSupply: null,\n    ethUsd: null,\n    mkrUsd: null,\n    lockedPeth: null,\n    lockedWeth: null,\n    gemPit: null,\n  }\n\n  eventEth = null\n  eventMkr = null\n\n  componentDidMount() {\n    console.log('did mount')\n    initWeb3(eth)\n    // window.web3 = web3\n    window.eth = eth\n    window.utils = utils\n    this.init()\n    this.eventEth = weth.events.Transfer({ filter: { dst: addresses.tub } }, (err, event) => {\n      if (event) {\n        console.log(event)\n        console.log(utils.fromWei(event.returnValues.wad) + \" WETH locked at \" + Date.now());\n        this.doLockedWeth()\n      } else {\n        console.log(err)\n      }\n    })\n    this.eventMkr = mkr.events.Transfer({ filter: { dst: addresses.pit } }, (err, event) => {\n      if (event) {\n        console.log(utils.fromWei(event.returnValues.wad) + \" MKR sent to burn \" + Date.now());\n        this.doGemPit()\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    this.eventEth && this.eventEth.unsubscribe()\n    this.eventMkr && this.eventMkr.unsubscribe()\n  }\n\n  init = () => {\n    this.doDaiSupply()\n    this.doEthSupply()\n    this.doWethSupply()\n    this.doPethSupply()\n    this.doEthUsd()\n    this.doMkrUsd()\n    this.doLockedPeth()\n    this.doLockedWeth()\n    this.doGemPit()\n  }\n\n  doGemPit = async () => {\n    let gemPit = await mkr.methods.balanceOf(addresses.pit).call()\n    gemPit = utils.fromWei(gemPit)\n    this.setState({\n      gemPit\n    })\n  }\n\n  doLockedWeth = async () => {\n    let lockedWeth = await tub.methods.pie().call()\n    lockedWeth = utils.fromWei(lockedWeth)\n    this.setState({\n      lockedWeth\n    })\n  }\n\n  doLockedPeth = async () => {\n    let lockedPeth = await tub.methods.air().call()\n    lockedPeth = utils.fromWei(lockedPeth)\n    this.setState({\n      lockedPeth\n    })\n  }\n\n  doDaiSupply = async () => {\n    let daiSupply = await dai.methods.totalSupply().call()\n    daiSupply = utils.fromWei(daiSupply)\n    this.setState({\n      daiSupply\n    })\n  }\n\n  doWethSupply = async () => {\n    let wethSupply = await weth.methods.totalSupply().call()\n    wethSupply = utils.fromWei(wethSupply)\n    this.setState({\n      wethSupply\n    })\n  }\n\n  doPethSupply = async () => {\n    let pethSupply = await peth.methods.totalSupply().call()\n    pethSupply = utils.fromWei(pethSupply)\n    this.setState({\n      pethSupply\n    })\n  }\n\n  doEthSupply = async () => {\n    const ethSupply = await etherscanSupply()\n    this.setState({\n      ethSupply\n    })\n  }\n\n  doEthUsd = async () => {\n    let value = await ethUsd.methods.read().call()\n    value = utils.fromWei(value)\n    this.setState({\n      ethUsd: value\n    })\n  }\n\n  doMkrUsd = async () => {\n    let value = await mkrUsd.methods.read().call()\n    value = utils.fromWei(value)\n    this.setState({\n      mkrUsd: value\n    })\n  }\n\n  render() {\n    const { daiSupply, ethSupply, wethSupply, pethSupply, ethUsd, mkrUsd, lockedPeth, lockedWeth, gemPit } = this.state\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns is-vcentered\">\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <div className=\"columns is-vcentered\">\n                  <div className=\"column is-narrow\">\n                    <figure className=\"image is-48x48 is-pulled-left\">\n                      <img src={daiLogo} alt=\"Dai Logo\" width=\"48px\" />\n                    </figure>\n                  </div>\n                  <div className=\"column\">\n                    <h3 className=\"title\">Dai</h3>\n                    <p className=\"subtitle is-size-4\">{formatCurr.format(daiSupply)}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\">Eth Supply</h3>\n                <p className=\"subtitle is-size-4\">{formatAmount.format(ethSupply)}</p>\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"box has-text-centered\">\n                <h3 className=\"title\">Eth Locked</h3>\n                <p className=\"subtitle is-size-4\">{formatAmount.format(lockedWeth)}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box\">\n                <h2 className=\"title\">Zomg</h2>\n              </div>\n              <p>ethUsd: {formatCurr.format(ethUsd)}</p>\n              <p>mkrUsd: {formatCurr.format(mkrUsd)}</p>\n              <p>wethSupply: {formatAmount.format(wethSupply)}</p>\n              <p>% {lockedWeth / wethSupply * 100}</p>\n              <p>pethSupply: {formatAmount.format(pethSupply)}</p>\n              <p>lockedPeth: {formatAmount.format(lockedPeth)}</p>\n              <p>% {lockedWeth / ethSupply * 100}</p>\n              <p>PETH/ETH Ratio: {lockedWeth / pethSupply}</p>\n              <p>MKR to burn: {formatAmount.format(gemPit)}</p>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}